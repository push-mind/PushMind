# 공통 설정
server:
  port: 8880
  servlet:
    encoding:
      force-response: true

logging:
  level:
    com.pushminds: debug
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql: trace

spring:
  profiles:
    active: local # 기본 프로필을 local로 설정
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true

---

# Local 환경 (H2 데이터베이스)
spring:
  config:
    activate:
      on-profile: local
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:h2:~/testdb
    driver-class-name: org.h2.Driver
    username: sar
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create # Local에서는 애플리케이션 실행 시 스키마를 다시 생성
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: your_local_kakao_client_id
            client-secret: your_local_kakao_client_secret
            scope: profile_nickname
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

---

# Prod 환경 (MySQL 데이터베이스)
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    # 실제 운영 환경의 Datasource 정보를 입력하세요.
    url: jdbc:mysql://localhost:3306/pushmind
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: your_username
    password: your_password
  jpa:
    hibernate:
      ddl-auto: validate # Prod에서는 스키마를 검증만 함
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: your_prod_kakao_client_id
            client-secret: your_prod_kakao_client_secret
            scope: profile_nickname
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
